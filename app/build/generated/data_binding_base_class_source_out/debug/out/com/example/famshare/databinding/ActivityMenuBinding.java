// Generated by view binder compiler. Do not edit!
package com.example.famshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.famshare.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMenuBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonInc;

  @NonNull
  public final Button buttonInfo;

  @NonNull
  public final Button buttonPro;

  @NonNull
  public final Button buttonRic;

  @NonNull
  public final TextView textMenu;

  private ActivityMenuBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonInc,
      @NonNull Button buttonInfo, @NonNull Button buttonPro, @NonNull Button buttonRic,
      @NonNull TextView textMenu) {
    this.rootView = rootView;
    this.buttonInc = buttonInc;
    this.buttonInfo = buttonInfo;
    this.buttonPro = buttonPro;
    this.buttonRic = buttonRic;
    this.textMenu = textMenu;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonInc;
      Button buttonInc = ViewBindings.findChildViewById(rootView, id);
      if (buttonInc == null) {
        break missingId;
      }

      id = R.id.buttonInfo;
      Button buttonInfo = ViewBindings.findChildViewById(rootView, id);
      if (buttonInfo == null) {
        break missingId;
      }

      id = R.id.buttonPro;
      Button buttonPro = ViewBindings.findChildViewById(rootView, id);
      if (buttonPro == null) {
        break missingId;
      }

      id = R.id.buttonRic;
      Button buttonRic = ViewBindings.findChildViewById(rootView, id);
      if (buttonRic == null) {
        break missingId;
      }

      id = R.id.textMenu;
      TextView textMenu = ViewBindings.findChildViewById(rootView, id);
      if (textMenu == null) {
        break missingId;
      }

      return new ActivityMenuBinding((ConstraintLayout) rootView, buttonInc, buttonInfo, buttonPro,
          buttonRic, textMenu);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
