// Generated by view binder compiler. Do not edit!
package com.example.famshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.famshare.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRichiesteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView RichiesteText;

  @NonNull
  public final FloatingActionButton floatingActionAddreq;

  @NonNull
  public final TextView lemiericText;

  @NonNull
  public final RecyclerView recyclerviewmyreq;

  @NonNull
  public final RecyclerView recyclerviewreq;

  private ActivityRichiesteBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView RichiesteText, @NonNull FloatingActionButton floatingActionAddreq,
      @NonNull TextView lemiericText, @NonNull RecyclerView recyclerviewmyreq,
      @NonNull RecyclerView recyclerviewreq) {
    this.rootView = rootView;
    this.RichiesteText = RichiesteText;
    this.floatingActionAddreq = floatingActionAddreq;
    this.lemiericText = lemiericText;
    this.recyclerviewmyreq = recyclerviewmyreq;
    this.recyclerviewreq = recyclerviewreq;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRichiesteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRichiesteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_richieste, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRichiesteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RichiesteText;
      TextView RichiesteText = ViewBindings.findChildViewById(rootView, id);
      if (RichiesteText == null) {
        break missingId;
      }

      id = R.id.floatingActionAddreq;
      FloatingActionButton floatingActionAddreq = ViewBindings.findChildViewById(rootView, id);
      if (floatingActionAddreq == null) {
        break missingId;
      }

      id = R.id.lemiericText;
      TextView lemiericText = ViewBindings.findChildViewById(rootView, id);
      if (lemiericText == null) {
        break missingId;
      }

      id = R.id.recyclerviewmyreq;
      RecyclerView recyclerviewmyreq = ViewBindings.findChildViewById(rootView, id);
      if (recyclerviewmyreq == null) {
        break missingId;
      }

      id = R.id.recyclerviewreq;
      RecyclerView recyclerviewreq = ViewBindings.findChildViewById(rootView, id);
      if (recyclerviewreq == null) {
        break missingId;
      }

      return new ActivityRichiesteBinding((ConstraintLayout) rootView, RichiesteText,
          floatingActionAddreq, lemiericText, recyclerviewmyreq, recyclerviewreq);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
